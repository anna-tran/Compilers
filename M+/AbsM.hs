

module AbsM where

-- Haskell module generated by the BNF converter




newtype TokenID = TokenID String deriving (Eq, Ord, Show, Read)
newtype TokenReal = TokenReal String deriving (Eq, Ord, Show, Read)
data Prog = Prog Block
  deriving (Eq, Ord, Show, Read)

data Block = Block Decls ProgBody
  deriving (Eq, Ord, Show, Read)

data Decls = DeclDecls Decl Decls | NoDecls
  deriving (Eq, Ord, Show, Read)

data Decl = VarDecl VarDecl | FunDecl FunDecl
  deriving (Eq, Ord, Show, Read)

data VarDecl = MVar TokenID ArrDim Type
  deriving (Eq, Ord, Show, Read)

data Type = MInt | MReal | MBool
  deriving (Eq, Ord, Show, Read)

data ArrDim = ExprArrDim Expr ArrDim | NoArrDim
  deriving (Eq, Ord, Show, Read)

data FunDecl = MFun TokenID ParamList Type FunBlock
  deriving (Eq, Ord, Show, Read)

data FunBlock = DeclFunBody Decls FunBody
  deriving (Eq, Ord, Show, Read)

data ParamList = Params Params
  deriving (Eq, Ord, Show, Read)

data Params = DeclMoreParams BasicDecl MoreParams | NoParams
  deriving (Eq, Ord, Show, Read)

data MoreParams
    = CommaDeclMoreParams BasicDecl MoreParams | NoMoreParams
  deriving (Eq, Ord, Show, Read)

data BasicDecl = BasicDecl TokenID [BasicArrayDim] Type
  deriving (Eq, Ord, Show, Read)

data BasicArrayDim
  deriving (Eq, Ord, Show, Read)

data ProgBody = ProgStmtsBody ProgStmts
  deriving (Eq, Ord, Show, Read)

data FunBody = FunBody ProgStmts Expr
  deriving (Eq, Ord, Show, Read)

data ProgStmts = ProgStmts Stmt ProgStmts | NoProgStmts
  deriving (Eq, Ord, Show, Read)

data Stmt
    = MCond Expr Stmt Stmt
    | MWhile Expr Stmt
    | MRead Identifier
    | MAss Identifier Expr
    | MPrint Expr
    | MBlock Block
  deriving (Eq, Ord, Show, Read)

data Identifier = MId TokenID ArrDim
  deriving (Eq, Ord, Show, Read)

data Expr = ExprBintTerm Expr BintTerm | BintTerm BintTerm
  deriving (Eq, Ord, Show, Read)

data BintTerm
    = BintTermBintFactor BintTerm BintFact | BintFactor BintFact
  deriving (Eq, Ord, Show, Read)

data BintFact
    = NotBintFactor BintFact
    | IntECompareIntE IntExpr CompareOp IntExpr
    | IntE IntExpr
  deriving (Eq, Ord, Show, Read)

data CompareOp = MEq | MLt | MGt | MLe | MGe
  deriving (Eq, Ord, Show, Read)

data IntExpr = IntEAddIntT IntExpr AddOp IntTerm | IntT IntTerm
  deriving (Eq, Ord, Show, Read)

data AddOp = MAdd | MSub
  deriving (Eq, Ord, Show, Read)

data IntTerm = IntTMulIntF IntTerm MulOp IntFactor | IntF IntFactor
  deriving (Eq, Ord, Show, Read)

data MulOp = MMul | MDiv
  deriving (Eq, Ord, Show, Read)

data IntFactor
    = EnclosedExpr Expr
    | MSize TokenID [BasicArrayDim]
    | MFloat Expr
    | MFloor Expr
    | MCeil Expr
    | Id_modlist TokenID ModifierList
    | MIval Integer
    | MRval Double
    | MBval Mbool
    | MNval IntFactor
  deriving (Eq, Ord, Show, Read)

data Mbool = NoTrue | NoFalse
  deriving (Eq, Ord, Show, Read)

data ModifierList = EnclosedArgs Args | ArrDim ArrDim
  deriving (Eq, Ord, Show, Read)

data Args = MoreArgs Expr MoreArgs | NoArgs
  deriving (Eq, Ord, Show, Read)

data MoreArgs = ExprMoreArgs Expr MoreArgs | NoMoreArgs
  deriving (Eq, Ord, Show, Read)

